generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(cuid())
  email          String    @unique
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  connections    Connection[]
}

model Connection {
  id                String    @id @default(cuid())
  userId            String
  provider          String
  itemId            String    @unique
  accessToken       String
  institutionId     String?
  institutionName   String?
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  user              User      @relation(fields: [userId], references: [id])
  accounts          Account[]
  syncCursor        SyncCursor?
}

model Account {
  id              String       @id @default(cuid())
  connectionId    String
  accountId       String       @unique
  mask            String?
  name            String
  officialName    String?
  type            String
  subtype         String?
  currentBalance  Float?
  availableBalance Float?
  currency        String?      @default("USD")
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt
  connection      Connection   @relation(fields: [connectionId], references: [id])
  transactions    Transaction[]
}

model Transaction {
  id                 String   @id @default(cuid())
  accountId          String
  transactionId      String   @unique
  amount             Float
  isoCurrencyCode    String?  @default("USD")
  merchantName       String?
  name               String?
  date               DateTime
  pending            Boolean  @default(false)
  categoryPrimary    String?
  categoryDetailed   String?
  paymentChannel     String?
  authorizedDate     DateTime?
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  account            Account  @relation(fields: [accountId], references: [id])
}

model SyncCursor {
  connectionId  String   @id
  cursor        String?
  updatedAt     DateTime @updatedAt
  connection    Connection @relation(fields: [connectionId], references: [id])
}

